.TH "SatFileHandler" 3 "Fri Mar 6 2020" "Version 0.0.1" "CougSat1-IHU" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SatFileHandler \- Class that will handle all file read/write operations to a given medium on the sattelite\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SatFileHandler\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSatFileHandler\fP (PinName mosi, PinName miso, PinName sclk, PinName cs, uint64_t hz=1000000, bool crc_on=true, bool debug=false)"
.br
.RI "Create a \fBSatFileHandler\fP where the debug state can be enabled or disabled\&. "
.ti -1c
.RI "\fB~SatFileHandler\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "bool \fBwritef\fP (std::string filenameBase, const char *message)"
.br
.RI "Writes a string to a file\&. "
.ti -1c
.RI "bool \fBwrite\fP (std::string filenameBase, const std::string &message)"
.br
.RI "Calls writef? "
.ti -1c
.RI "bool \fBwriteStart\fP ()"
.br
.RI "Writes whatever is in the queue\&. "
.ti -1c
.RI "mbed_error_status_t \fBinit\fP ()"
.br
.RI "Initialize the block device, filesystem and serial connection\&. "
.ti -1c
.RI "void \fBreformat\fP ()"
.br
.RI "Reformats the filesystem\&. "
.ti -1c
.RI "void \fBmount\fP ()"
.br
.RI "Mounts the filesystem\&. "
.ti -1c
.RI "void \fBunmount\fP ()"
.br
.RI "Unmounts the filesystem\&. "
.ti -1c
.RI "bool \fBcheck\fP ()"
.br
.RI "checks for bad blocks\&. "
.ti -1c
.RI "size_t \fBgetFreeSpace\fP ()"
.br
.RI "Get amount of free space in bytes of the filesystem\&. "
.ti -1c
.RI "size_t \fBgetBlockDeviceSize\fP ()"
.br
.RI "Get the number of bytes in the block device\&. "
.ti -1c
.RI "bool \fBenqueueMessage\fP (pair< std::string, std::string > message)"
.br
.RI "Function to enqueue a message to store on the SD card\&. "
.ti -1c
.RI "std::string \fBread\fP (const std::string &fileNameFull)"
.br
.RI "Read a file from the filesystem\&. "
.in -1c
.SH "Detailed Description"
.PP 
Class that will handle all file read/write operations to a given medium on the sattelite\&. 

Handles all operations related to files\&. Currently only operates on string data\&. TODO: Update to work with other types of data\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "SatFileHandler::SatFileHandler (PinName mosi, PinName miso, PinName sclk, PinName cs, uint64_t hz = \fC1000000\fP, bool crc_on = \fCtrue\fP, bool debug = \fCfalse\fP)"

.PP
Create a \fBSatFileHandler\fP where the debug state can be enabled or disabled\&. 
.PP
\fBParameters:\fP
.RS 4
\fImosi\fP PinName of SPI Master in Slave out\&. 
.br
\fImiso\fP PinName of SPI Master out Slave in\&. 
.br
\fIsclk\fP PinName of Serial Clock for SPI\&. 
.br
\fIcs\fP PinName of Chip Select pin on SD breakout\&. 
.br
\fIhz\fP Operating frequency of the SPI bus\&. 
.br
\fIcrc_on\fP Decides whether or not to use cyclic redundancy check 
.br
\fIdebug\fP Decides whether or not debug data should be outputted\&. 
.RE
.PP

.SS "SatFileHandler::~SatFileHandler ()"

.PP
Destructor\&. Unmounts the filesystem and deinits the block device for a clean disconnect\&. 
.SH "Member Function Documentation"
.PP 
.SS "bool SatFileHandler::enqueueMessage (pair< std::string, std::string > message)"

.PP
Function to enqueue a message to store on the SD card\&. 
.PP
\fBParameters:\fP
.RS 4
\fImessage\fP Input std::pair<fileBase, message>\&.
.RE
.PP
\fBReturns:\fP
.RS 4
True if enqueued; false if the queue is full\&.
.RE
.PP
USE FOR THREAD SAFETY 
.SS "size_t SatFileHandler::getBlockDeviceSize ()"

.PP
Get the number of bytes in the block device\&. 
.PP
\fBReturns:\fP
.RS 4
Size of block device in bytes\&. 
.RE
.PP

.SS "size_t SatFileHandler::getFreeSpace ()"

.PP
Get amount of free space in bytes of the filesystem\&. 
.PP
\fBReturns:\fP
.RS 4
Amount of free space in bytes\&. 
.RE
.PP

.SS "mbed_error_status_t SatFileHandler::init ()"

.PP
Initialize the block device, filesystem and serial connection\&. 
.PP
\fBReturns:\fP
.RS 4
Return 0 for success, negative error code for failure\&. 
.RE
.PP

.SS "std::string SatFileHandler::read (const std::string & fileNameFull)"

.PP
Read a file from the filesystem\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfileNameFull\fP Name of the file with extension to read\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
String of data in file\&. 
.RE
.PP

.SS "bool SatFileHandler::write (std::string filenameBase, const std::string & message)"

.PP
Calls writef? 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP Name of file\&. 
.br
\fIreference\fP Reference to message\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True for success, otherwise false\&. 
.RE
.PP

.SS "bool SatFileHandler::writef (std::string filenameBase, const char * message)"

.PP
Writes a string to a file\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstring\fP Name of the file\&. 
.br
\fImessage\fP C-String Message to write\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
True for success, otherwise false\&. 
.RE
.PP

.SS "bool SatFileHandler::writeStart ()"

.PP
Writes whatever is in the queue\&. 
.PP
\fBReturns:\fP
.RS 4
True for success, otherwise false\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for CougSat1-IHU from the source code\&.
